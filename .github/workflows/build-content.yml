name: Build content.json

on:
  push:
    branches: [ main ]
    paths:
      - "content/**"
      - ".github/workflows/build-content.yml"
  workflow_dispatch:

permissions:
  contents: write   # <-- allows the job to commit content.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install builder deps
        run: |
          npm init -y >/dev/null 2>&1
          npm install gray-matter@4 >/dev/null 2>&1

      - name: Build content.json
        run: |
          node - <<'JS'
          const fs = require('fs').promises;
          const path = require('path');
          const matter = require('gray-matter');

          async function scan(dir){
            const files = [];
            async function walk(p){
              let entries = [];
              try { entries = await fs.readdir(p, { withFileTypes: true }); } catch { return; }
              for (const e of entries){
                const full = path.join(p, e.name);
                if (e.isDirectory()) await walk(full);
                else if (/\.md$/i.test(e.name)) files.push(full);
              }
            }
            await walk(dir);
            return files;
          }
          const toSlug = s => (s||'')
            .toLowerCase().trim().replace(/[^a-z0-9]+/g,'-').replace(/^-+|-+$/g,'');

          (async () => {
            const files = await scan('content/posts');
            const posts = [];
            for (const f of files){
              const raw = await fs.readFile(f, 'utf8');
              const fm = matter(raw);
              const d = fm.data || {};
              const post = {
                title: d.title || 'Untitled',
                date:  d.date  || new Date().toISOString(),
                category: d.category || 'Market Insights',
                summary: d.summary || '',
                slug:  d.slug || toSlug(d.title || path.basename(f, '.md')),
                body:  (fm.content || '').trim()
              };
              posts.push(post);
            }
            posts.sort((a,b)=> new Date(b.date) - new Date(a.date));
            await fs.writeFile('content.json', JSON.stringify({ generatedAt: new Date().toISOString(), posts }, null, 2));
            console.log('Wrote content.json with', posts.length, 'posts');
          })().catch(err => { console.error(err); process.exit(1); });
          JS

      - name: Commit content.json
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions"
            git config user.email "actions@users.noreply.github.com"
            git add content.json
            git commit -m "Build content.json"
            git push
          else
            echo "No changes to commit."
          fi
